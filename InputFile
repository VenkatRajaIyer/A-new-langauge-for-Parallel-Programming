task ta
{
println("Philosopher A tried to acquire forks but didn't succeed")
delay(2000)
critical (chop_a, chop_b)
{
	println("Philosopher A is eating")
	delay(2000)
	println("Philosopher A finished eating")
}
}

task tb
{
println("Philosopher B tried to acquire forks but didn't succeed")
delay(2000)
critical (chop_b, chop_c)
{
	println("Philosopher B is eating")
	delay(2000)
	println("Philosopher B finished eating")
}
}

task tc
{
println("Philosopher C tried to acquire forks but didn't succeed")
delay(2000)
critical (chop_c, chop_d)
{
	println("Philosopher C is eating")
	delay(2000)
	println("Philosopher C finished eating")
}
}

task td
{
println("Philosopher D tried to acquire forks but didn't succeed")
delay(2000)
critical (chop_d, chop_e)
{
	println("Philosopher D is eating")
	delay(2000)
	println("Philosopher D finished eating")
}
}

task te
{
println("Philosopher E tried to acquire forks but didn't succeed")
delay(2000)
critical (chop_e, chop_a)
{
	println("Philosopher E is eating")
	delay(2000)
	println("Philosopher E finished eating")
}
}

int sum(int a, int b)
{
	d = a+b
	return d
}

main()
{
  a = 5
  b = 12
  c = sum(a,b)
  println("Welcome to Parallelo")
  
  parallelo.run(ta, tb, tc, td, te)
}



